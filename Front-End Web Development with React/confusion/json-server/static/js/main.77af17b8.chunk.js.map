{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/DishDetailComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/comments.js","redux/dishes.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderMenuItem","onClick","to","id","width","Menu","menu","dishes","map","key","active","required","val","length","maxLength","len","CommentForm","Component","constructor","super","this","state","isModalOpen","toggleModal","bind","handleSubmit","setState","values","postComment","dishId","rating","author","comment","render","outline","isOpen","toggle","onSubmit","htmlFor","md","size","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","value","color","RenderDish","top","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","isNumber","isNaN","Number","validEmail","test","Contact","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","offset","check","checkbox","About","RenderLeader","left","object","body","heading","RenderContent","leaders","title","list","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","Fragment","dark","expand","href","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","componentDidMount","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","addComment","withRouter","connect","dispatch","fetch","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","newComment","toISOString","method","JSON","stringify","headers","credentials","console","log","newFeedback","Comments","action","concat","Dishes","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.77af17b8.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n  return (\n      <div className=\"col-12\">\n          <span className=\"fa fa-spinner fa-pause fa-3x fa-fw text-primary\"></span>\n          <p>Loading...</p>\n      </div>\n  );\n};","export const baseUrl = 'http://localhost:3001/';","import React from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle\n} from \"reactstrap\";\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { FadeTransform } from \"react-animation-components\";\n\nfunction RenderCard({ item, isLoading, errMess }) {\n  if (isLoading) {\n    return <Loading />;\n  } else if (errMess) {\n    return <h4>{errMess}</h4>;\n  } else\n    return (\n      <FadeTransform\n        in\n        transformProps={{\n          exitTransform: \"scale(0.5) translateY(-50%)\"\n        }}\n      >\n        <Card>\n          <CardImg src={baseUrl + item.image} alt={item.name} />\n          <CardBody>\n            <CardTitle>{item.name}</CardTitle>\n            {item.designation ? (\n              <CardSubtitle>{item.designation}</CardSubtitle>\n            ) : null}\n            <CardText>{item.description}</CardText>\n          </CardBody>\n        </Card>\n      </FadeTransform>\n    );\n}\n\nfunction Home(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"row align-items-start\">\n        <div className=\"col-12 col-md m-1\">\n          <RenderCard\n            item={props.dish}\n            isLoading={props.dishesLoading}\n            errMess={props.dishErrMess}\n          />\n        </div>\n        <div className=\"col-12 col-md m-1\">\n          <RenderCard\n            item={props.promotion}\n            isLoading={props.promoLoading}\n            errMess={props.promoErrMess}\n          />\n        </div>\n        <div className=\"col-12 col-md m-1\">\n          <RenderCard\n            item={props.leader}\n            isLoading={props.leaderLoading}\n            errMess={props.leaderErrMess}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom'\nimport {Loading} from \"./LoadingComponent\";\nimport {baseUrl} from \"../shared/baseUrl\";\n\nfunction RenderMenuItem({ dish, onClick }) {\n        return (\n            <Card>\n                <Link to={`/menu/${dish.id}`}>\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                    <CardImgOverlay>\n                        <CardTitle>{dish.name}</CardTitle>\n                    </CardImgOverlay>\n                </Link>\n            </Card>\n        );\n    }\n\n    const Menu = (props) => {\n        const menu = props.dishes.dishes.map((dish) => {\n            return (\n                <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\n                    <RenderMenuItem dish={dish}/>\n                </div>\n            );\n        });\n\n\n        if (props.dishes.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.dishes.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h4>{props.dishes.errMess}</h4>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/home\">Home</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem active>\n                                Menu\n                            </BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Menu</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {menu}\n                    </div>\n                </div>\n            );\n        }\n\n    };\n\nexport default Menu;","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Label\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform, Fade, Stagger } from \"react-animation-components\";\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || val.length <= len;\r\nconst minLength = len => val => val && val.length >= len;\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n    this.props.postComment(\r\n      this.props.dishId,\r\n      values.rating,\r\n      values.author,\r\n      values.comment\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil\" /> Submit Comment\r\n        </Button>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={this.handleSubmit}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"rating\" md={12}>\r\n                  Rating\r\n                </Label>\r\n                <Col md={{ size: 12 }}>\r\n                  <Control.select\r\n                    model=\".rating\"\r\n                    name=\"rating\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"author\" md={12}>\r\n                  Your Name\r\n                </Label>\r\n                <Col md={12}>\r\n                  <Control.text\r\n                    model=\".author\"\r\n                    id=\"author\"\r\n                    name=\"author\"\r\n                    placeholder=\"Your Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15)\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".author\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"comment\" md={12}>\r\n                  Comment\r\n                </Label>\r\n                <Col md={12}>\r\n                  <Control.textarea\r\n                    model=\".comment\"\r\n                    id=\"comment\"\r\n                    name=\"comment\"\r\n                    rows={5}\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n  return (\r\n    <div className=\"col-12 col-md-5 m-1\">\r\n      <FadeTransform\r\n        in\r\n        transformProps={{\r\n          exitTransform: \"scale(0.5) translateY(-50%)\"\r\n        }}\r\n      >\r\n        <Card>\r\n          <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n          <CardBody>\r\n            <CardTitle>{dish.name}</CardTitle>\r\n            <CardText>{dish.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n  if (comments != null) {\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <h4>Comments</h4>\r\n        <Stagger in>\r\n          {comments.map(comment => {\r\n            return (\r\n              <Fade in key={comment.id}>\r\n                <li key={comment.id}>\r\n                  <p>{comment.comment}</p>\r\n                  <p>\r\n                    -- {comment.author} ,{\" \"}\r\n                    {new Intl.DateTimeFormat(\"en-US\", {\r\n                      year: \"numeric\",\r\n                      month: \"short\",\r\n                      day: \"2-digit\"\r\n                    }).format(new Date(Date.parse(comment.date)))}\r\n                  </p>\r\n                </li>\r\n              </Fade>\r\n            );\r\n          })}\r\n        </Stagger>\r\n        <CommentForm dishId={dishId} postComment={postComment} />\r\n      </div>\r\n    );\r\n  } else return <div />;\r\n}\r\n\r\nconst DishDetail = props => {\r\n  if (props.isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.errMess) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h4>{props.errMess}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.dish != null)\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/menu\">Menu</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>{props.dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <RenderDish dish={props.dish} />\r\n          <RenderComments\r\n            comments={props.comments}\r\n            postComment={props.postComment}\r\n            dishId={props.dish.id}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default DishDetail;","import React, { Component } from \"react\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Row,\n  Col,\n  Label\n} from \"reactstrap\";\nimport { Control, Form, Errors } from \"react-redux-form\";\nimport { Link } from \"react-router-dom\";\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || val.length <= len;\nconst minLength = len => val => val && val.length >= len;\nconst isNumber = val => !isNaN(Number(val));\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(values) {\n    this.props.resetFeedbackForm();\n    this.props.postFeedback(\n      values.firstname,\n      values.lastname,\n      values.telnum,\n      values.email,\n      values.agree,\n      values.contactType,\n      values.message\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/home\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n          </Breadcrumb>\n          <div className=\"col-12\">\n            <h3>Contact Us</h3>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h3>Send us your Feedback</h3>\n          </div>\n          <div className=\"col-12 col-md-9\">\n            <Form\n              model=\"feedback\"\n              onSubmit={values => this.handleSubmit(values)}\n            >\n              <Row className=\"form-group\">\n                <Label htmlFor=\"firstname\" md={2}>\n                  First Name\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".firstname\"\n                    id=\"firstname\"\n                    name=\"firstname\"\n                    placeholder=\"First Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15)\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".firstname\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be greater than 2 characters\",\n                      maxLength: \"Must be 15 characters or less\"\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"lastname\" md={2}>\n                  Last Name\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".lastname\"\n                    id=\"lastname\"\n                    name=\"lastname\"\n                    placeholder=\"Last Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15)\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".lastname\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be greater than 2 characters\",\n                      maxLength: \"Must be 15 characters or less\"\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"telnum\" md={2}>\n                  Contact Tel.\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".telnum\"\n                    id=\"telnum\"\n                    name=\"telnum\"\n                    placeholder=\"Tel. Number\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                      isNumber\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".telnum\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be greater than 2 numbers\",\n                      maxLength: \"Must be 15 numbers or less\",\n                      isNumber: \"Must be a number\"\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>\n                  Email\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".email\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      validEmail\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".email\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      validEmail: \"Invalid Email Address\"\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{ size: 6, offset: 2 }}>\n                  <div className=\"form-check\">\n                    <Label check>\n                      <Control.checkbox\n                        model=\".agree\"\n                        name=\"agree\"\n                        className=\"form-check-input\"\n                      />{\" \"}\n                      <strong>May we contact you?</strong>\n                    </Label>\n                  </div>\n                </Col>\n                <Col md={{ size: 3, offset: 1 }}>\n                  <Control.select\n                    model=\".contactType\"\n                    name=\"contactType\"\n                    className=\"form-control\"\n                  >\n                    <option>Tel.</option>\n                    <option>Email</option>\n                  </Control.select>\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"message\" md={2}>\n                  Your Feedback\n                </Label>\n                <Col md={10}>\n                  <Control.textarea\n                    model=\".message\"\n                    id=\"message\"\n                    name=\"message\"\n                    rows={12}\n                    className=\"form-control\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }}>\n                  <Button type=\"submit\" color=\"primary\">\n                    Send Feedback\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;","import React from \"react\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Card,\n  CardBody,\n  CardHeader,\n  Media\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { Loading } from \"./LoadingComponent\";\nimport { Fade, Stagger } from \"react-animation-components\";\n\nfunction About(props) {\n  function RenderLeader({ leader }) {\n    return (\n      <Media className=\"mt-5\">\n        <Media left className=\"mr-5\">\n          <Media object src={baseUrl + leader.image} alt={leader.name} />\n        </Media>\n        <Media body>\n          <Media heading>{leader.name}</Media>\n          <p>{leader.designation}</p>\n          {leader.description}\n        </Media>\n      </Media>\n    );\n  }\n\n  function RenderContent({ leaders, isLoading, errMess }) {\n    if (isLoading) {\n      return <Loading />;\n    } else if (errMess) {\n      return <h4>{errMess}</h4>;\n    } else\n      return (\n        <Stagger in>\n          {props.leaders.map(leader => (\n            <Fade in key={leader.id}>\n              <RenderLeader key={leader.id} leader={leader} />\n            </Fade>\n          ))}\n        </Stagger>\n      );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/home\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>About Us</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"col-12\">\n          <h3>About Us</h3>\n          <hr />\n        </div>\n      </div>\n      <div className=\"row row-content\">\n        <div className=\"col-12 col-md-6\">\n          <h2>Our History</h2>\n          <p>\n            Started in 2010, Ristorante con Fusion quickly established itself as\n            a culinary icon par excellence in Hong Kong. With its unique brand\n            of world fusion cuisine that can be found nowhere else, it enjoys\n            patronage from the A-list clientele in Hong Kong. Featuring four of\n            the best three-star Michelin chefs in the world, you never know what\n            will arrive on your plate the next time you visit us.\n          </p>\n          <p>\n            The restaurant traces its humble beginnings to{\" \"}\n            <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\n            Peter Pan, that featured for the first time the world's best\n            cuisines in a pan.\n          </p>\n        </div>\n        <div className=\"col-12 col-md-5\">\n          <Card>\n            <CardHeader className=\"bg-primary text-white\">\n              Facts At a Glance\n            </CardHeader>\n            <CardBody>\n              <dl className=\"row p-1\">\n                <dt className=\"col-6\">Started</dt>\n                <dd className=\"col-6\">3 Feb. 2013</dd>\n                <dt className=\"col-6\">Major Stake Holder</dt>\n                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                <dt className=\"col-6\">Last Year's Turnover</dt>\n                <dd className=\"col-6\">$1,250,375</dd>\n                <dt className=\"col-6\">Employees</dt>\n                <dd className=\"col-6\">40</dd>\n              </dl>\n            </CardBody>\n          </Card>\n        </div>\n        <div className=\"col-12\">\n          <Card>\n            <CardBody className=\"bg-faded\">\n              <blockquote className=\"blockquote\">\n                <p className=\"mb-0\">\n                  You better cut the pizza in four pieces because I'm not hungry\n                  enough to eat six.\n                </p>\n                <footer className=\"blockquote-footer\">\n                  Yogi Berra,\n                  <cite title=\"Source Title\">\n                    The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\n                    2014\n                  </cite>\n                </footer>\n              </blockquote>\n            </CardBody>\n          </Card>\n        </div>\n      </div>\n      <div className=\"row row-content\">\n        <div className=\"col-12\">\n          <h2>Corporate Leadership</h2>\n        </div>\n        <div className=\"col-12\">\n          <Media list>\n            <RenderContent\n              leaders={props.leader}\n              isLoading={props.leaderLoading}\n              errMess={props.leaderErrMess}\n            />\n          </Media>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom'\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n      });\n    }\n\n  handleLogin(event) {\n    this.toggleModal();\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n      + \" Remember: \" + this.remember.checked);\n    event.preventDefault();\n\n  }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='/assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                              <NavItem>\n                                <Button outline onClick={this.toggleModal}>\n                                    <span className=\"fa fa-sign-in fa-lg\"> Login </span>\n                                </Button>\n                              </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                            <div className=\"row row-header\">\n                                <div className=\"col-12 col-sm-6\">\n                                    <h1>Ristornate Con Fusion</h1>\n                                    <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                                </div>\n                            </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                  <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                  <ModalBody>\n                    <Form onSubmit={this.handleLogin}>\n                      <FormGroup>\n                        <Label htmlFor=\"username\">Username</Label>\n                        <Input type=\"text\" id=\"username\" name=\"username\"\n                               innerRef={(input) => this.username = input} />\n                      </FormGroup>\n                      <FormGroup>\n                        <Label htmlFor=\"password\">Password</Label>\n                        <Input type=\"password\" id=\"password\" name=\"password\"\n                               innerRef={(input) => this.password = input}  />\n                      </FormGroup>\n                      <FormGroup check>\n                        <Label check>\n                          <Input type=\"checkbox\" name=\"remember\"\n                                 innerRef={(input) => this.remember = input}  />\n                          Remember me\n                        </Label>\n                      </FormGroup>\n                      <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                    </Form>\n                  </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to='/home'>Home</Link></li>\n                            <li><Link to='/aboutus'>About Us</Link></li>\n                            <li><Link to='/menu'>Menu</Link></li>\n                            <li><Link to='/contactus'>Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                            confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","  \nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const DISHES_LOADING = \"DISHES_LOADING\";\nexport const DISHES_FAILED = \"DISHES_FAILED\";\nexport const ADD_DISHES = \"ADD_DISHES\";\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\nexport const PROMOS_LOADING = \"PROMOS_LOADING\";\nexport const ADD_PROMOS = \"ADD_PROMOS\";\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\nexport const ADD_LEADERS = \"ADD_LEADERS\";\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";","import * as ActionTypes from \"./ActionTypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\n  const newComment = {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  };\n  newComment.date = new Date().toISOString();\n\n  return fetch(baseUrl + \"comments\", {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  })\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        throw error;\n      }\n    )\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error => {\n      console.log(\"post comments\", error.message);\n      alert(\"Your comment could not be posted\\nError: \" + error.message);\n    });\n};\n\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading());\n\n  return fetch(baseUrl + \"dishes\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n};\n\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = errmess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\n\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\n\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + \"comments\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\n\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\n\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n\n  return fetch(baseUrl + \"promotions\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\n\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});\n\nexport const fetchLeaders = () => dispatch => {\n  dispatch(leadersLoading());\n\n  return fetch(baseUrl + \"leaders\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(leaders => dispatch(addLeaders(leaders)))\n    .catch(error => dispatch(leadersFailed(error.message)));\n};\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = errmess => ({\n  type: ActionTypes.LEADERS_FAILED,\n  payload: errmess\n});\n\nexport const addLeaders = leaders => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders\n});\n\nexport const postFeedback = (\n  firstname,\n  lastname,\n  telnum,\n  email,\n  agree,\n  contactType,\n  message\n) => dispatch => {\n  const newFeedback = {\n    firstname: firstname,\n    lastname: lastname,\n    telnum: telnum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  };\n\n  return fetch(baseUrl + \"feedback\", {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  })\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        throw error;\n      }\n    )\n    .then(response => response.json())\n    .then(response =>\n      alert(\"Thank you for your feedback!\" + JSON.stringify(response))\n    )\n    .catch(error => {\n      console.log(\"post feedbacks\", error.message);\n      alert(\"Your feedback could not be posted\\nError: \" + error.message);\n    });\n};","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { actions } from \"react-redux-form\";\nimport Home from \"./HomeComponent\";\nimport Menu from \"./MenuComponent\";\nimport DishDetail from \"./DishDetailComponent\";\nimport Contact from \"./ContactComponent\";\nimport AboutUs from \"./AboutComponent\";\nimport Header from \"./HeaderComponent\";\nimport Footer from \"./FooterComponent\";\nimport {\n  postComment,\n  postFeedback,\n  fetchDishes,\n  fetchComments,\n  fetchPromos,\n  fetchLeaders\n} from \"../redux/ActionCreators\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchDishes: () => {\n    dispatch(fetchDishes());\n  },\n  resetFeedbackForm: () => {\n    dispatch(actions.reset(\"feedback\"));\n  },\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos()),\n  fetchLeaders: () => dispatch(fetchLeaders()),\n  postComment: (dishId, rating, author, comment) =>\n    dispatch(postComment(dishId, rating, author, comment)),\n  postFeedback: (\n    firstname,\n    lastname,\n    telnum,\n    email,\n    agree,\n    contactType,\n    message\n  ) =>\n    dispatch(\n      postFeedback(\n        firstname,\n        lastname,\n        telnum,\n        email,\n        agree,\n        contactType,\n        message\n      )\n    )\n});\n\nclass Main extends Component {\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n  render() {\n    const HomePage = () => {\n      return (\n        <Home\n          dish={this.props.dishes.dishes.filter(dish => dish.featured)[0]}\n          dishesLoading={this.props.dishes.isLoading}\n          dishErrMess={this.props.dishes.errMess}\n          promotion={\n            this.props.promotions.promotions.filter(promo => promo.featured)[0]\n          }\n          promoLoading={this.props.promotions.isLoading}\n          promoErrMess={this.props.promotions.errMess}\n          leader={\n            this.props.leaders.leaders.filter(leader => leader.featured)[0]\n          }\n          leaderLoading={this.props.leaders.isLoading}\n          leaderErrMess={this.props.leaders.errMess}\n        />\n      );\n    };\n\n    const DishWithId = ({ match }) => {\n      return (\n        <DishDetail\n          dish={\n            this.props.dishes.dishes.filter(\n              dish => dish.id === parseInt(match.params.dishId, 10)\n            )[0]\n          }\n          isLoading={this.props.dishes.isLoading}\n          errMess={this.props.dishes.errMess}\n          comments={this.props.comments.comments.filter(\n            comment => comment.dishId === parseInt(match.params.dishId, 10)\n          )}\n          commentsErrMess={this.props.comments.errMess}\n          addComment={this.props.addComment}\n          postComment={this.props.postComment}\n        />\n      );\n    };\n\n    return (\n      <div>\n        <Header />\n        <div>\n          <TransitionGroup>\n            <CSSTransition\n              key={this.props.location.key}\n              classNames=\"page\"\n              timeout={300}\n            >\n              <Switch location={this.props.location}>\n                <Route path=\"/home\" component={HomePage} />\n                <Route\n                  exact\n                  path=\"/aboutus\"\n                  component={() => (\n                    <AboutUs\n                      leaders={this.props.leaders.leaders}\n                      leaderLoading={this.props.leaders.isLoading}\n                      leaderErrMess={this.props.leaders.errMess}\n                    />\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/menu\"\n                  component={() => <Menu dishes={this.props.dishes} />}\n                />\n                <Route path=\"/menu/:dishId\" component={DishWithId} />\n                <Route\n                  exact\n                  path=\"/contactus\"\n                  component={() => (\n                    <Contact\n                      resetFeedbackForm={this.props.resetFeedbackForm}\n                      postFeedback={this.props.postFeedback}\n                    />\n                  )}\n                />\n                <Redirect to=\"/home\" />\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Main)\n);","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n        errMess: null,\n        comment: []\n    }, action) => {\n        switch (action.type) {\n          case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\n\n          case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\n\n          case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return { ...state, comments: state.comments.concat(comment)};\n\n            default:\n                return state;\n        }\n};","import * as ActionTypes from \"./ActionTypes\";\n\nexport const Dishes = (\n  state = {\n    isLoading: true,\n    errMess: null,\n    dishes: []\n  },\n  action\n) => {\n  switch (action.type) {\n    case ActionTypes.ADD_DISHES:\n      return {\n        ...state,\n        isLoading: false,\n        errMess: null,\n        dishes: action.payload\n      };\n\n    case ActionTypes.DISHES_LOADING:\n      return { ...state, isLoading: true, errMess: null, dishes: [] };\n\n    case ActionTypes.DISHES_FAILED:\n      return { ...state, isLoading: false, errMess: action.payload };\n\n    default:\n      return state;\n  }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state  = {\n    isLoading: true,\n    errMess: null,\n    promotions:[]}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_PROMOS:\n      return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n    case ActionTypes.PROMOS_LOADING:\n      return {...state, isLoading: true, errMess: null, promotions: []}\n\n    case ActionTypes.PROMOS_FAILED:\n      return {...state, isLoading: false, errMess: action.payload};\n\n    default:\n      return state;\n  }\n};","  \nimport * as ActionTypes from \"./ActionTypes\";\n\nexport const Leaders = (\n  state = {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n  },\n  action\n) => {\n  switch (action.type) {\n    case ActionTypes.ADD_LEADERS:\n      return {\n        ...state,\n        isLoading: false,\n        errMess: null,\n        leaders: action.payload\n      };\n\n    case ActionTypes.LEADERS_LOADING:\n      return { ...state, isLoading: true, errMess: null, leaders: [] };\n\n    case ActionTypes.LEADERS_FAILED:\n      return { ...state, isLoading: false, errMess: action.payload };\n\n    default:\n      return state;\n  }\n};","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent'\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { ConfigureStore} from \"./redux/configureStore\";\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n    render() {\n        return (\n          <Provider store={store}>\n            <BrowserRouter>\n                <div className=\"App\">\n                    <Main />\n                </div>\n            </BrowserRouter>\n          </Provider>\n        );\n    }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\nimport {createForms} from 'react-redux-form'\nimport {Comments} from \"./comments\";\nimport {Dishes} from \"./dishes\";\nimport {Promotions} from \"./promotions\";\nimport {Leaders} from \"./leaders\";\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport {InitialFeedback} from \"./forms\";\n\nexport const ConfigureStore = () => {\n  const store = createStore(\n      combineReducers({\n          dishes: Dishes,\n          comments: Comments,\n          promotions: Promotions,\n          leaders: Leaders,\n              ...createForms({\n                  feedback: InitialFeedback\n              })\n      }),\n      applyMiddleware(thunk, logger)\n  );\n\n  return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css'\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}